% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect-value.R
\name{value-expectations}
\alias{value-expectations}
\alias{expect_values}
\alias{expect_regex}
\alias{expect_range}
\alias{expect_exclusive}
\alias{expect_unique}
\alias{expect_unique_across}
\title{Expectations: value checks}
\usage{
expect_values(
  var,
  ...,
  miss = getOption("testdat.miss"),
  data = get_testdata()
)

expect_regex(var, pattern, flt = TRUE, data = get_testdata())

expect_range(var, min, max, ..., flt = TRUE, data = get_testdata())

expect_exclusive(
  vars,
  exc_vars,
  exc_val = 1,
  flt = TRUE,
  data = get_testdata()
)

expect_unique(vars, flt = TRUE, data = get_testdata())

expect_unique_across(vars, flt = TRUE, data = get_testdata())
}
\arguments{
\item{var}{an unquoted variable name}

\item{...}{vectors of valid values}

\item{miss}{a vector of values to be treated as missing. The
\link[=testdat]{testdat.miss} option is used by default}

\item{data}{data frame to test. The \link[=global-data]{global test data} is used
by default.}

\item{pattern}{a regex to check}

\item{flt}{a filter specifying a subset of the dataset to test}

\item{min}{minimum value for range check}

\item{max}{maximum value for range check}

\item{vars}{a list of columns generated by \link[dplyr:vars]{vars()}}

\item{exc_vars}{The variable set to check, specified using \code{\link[=vars]{vars()}}. This
should include all variables specified in the \code{vars} argument}

\item{exc_val}{The value to check for exclusivity (default: \code{1})}
}
\description{
These functions test variable values:
\itemize{
\item \code{expect_values} tests one variable (\code{var}) against a set of values
(\code{...}) and fails if there are any other values in the variable
\item \code{expect_regex} tests one variable (\code{var}) against a regex pattern
(\code{pattern}) and fails if there are any values not conforming to that
pattern in the variable
\item \code{expect_range} tests one variable (\code{var}) against a range (defined by
\code{min}/\code{max} values) and fails if there are any values in the variable
outside this range
\item \code{expect_exclusive} tests one set of variables (\code{exc_vars}) against
another (\code{vars}) with reference to a value (\code{exc_val}) and fails if any
observation has \emph{all} of the variables in \code{vars} equal to \code{exc_val} and
and \emph{any} of the variables in \code{exc_vars} (aside from those which are
also in \code{vars}) equal to \code{exc_val}.
\item \code{expect_unique} tests a set of variables (\code{vars}) and fails if the
variables collectively do not uniquely identify the observations
\item \code{expect_unique_across} tests a set of variables (\code{vars}) and fails if
each observation does not have different values in each of the variables
in \code{vars}.
}
}
\examples{

# Single variable checks ----

# Check that all values in a variable fall into a given set
expect_values(vs, 0:1, data = mtcars)

# Check that all values in a variable conform to a certain regex pattern
expect_regex(vs, "[01]", data = mtcars)

# Check that all values in a variable fall into a given range
expect_range(mpg, 10, 40, data = mtcars)


# Multi variable checks ----

my_q_block <- data.frame(
  resp_id = 1:5, # Unique to respondent
  q10_1 = c(1, 1, 0, 0, 0),
  q10_2 = c(0, 1, 0, 0, 0),
  q10_3 = c(0, 0, 1, 0, 0),
  q10_98 = c(1, 0, 0, 1, 0), # None of the above
  q10_99 = c(0, 0, 0, 0, 1)  # Item not answered
)

# Make sure that if "None of the above" and "Item skipped" are selected
# none of the other question options are selected:
\dontrun{expect_exclusive(
  vars(q10_98, q10_99),
  vars(starts_with("q10_")),
  data = my_q_block
)}

my_sales <- data.frame(
  purchaser_id = c(1, 1, 1, 2, 3),
  purchase_number = c(1, 2, 3, 1, 1),
  item_id = 1:5
)

# Check that all values in a combination of variables are unique
expect_unique(vars(purchaser_id, purchase_number), data = my_sales)

student_fruit_preferences <- data.frame(
  student_id = 1:5,
  apple = c(1, 1, 1, 1, 1),
  orange = c(2, 3, 2, 3, 2),
  banana = c(3, 2, 3, 2, 3)
)

# Check that every observation has a different value across a set of variables
expect_unique_across(vars(apple, orange, banana), data = student_fruit_preferences)


}
\seealso{
Other data expectations: 
\code{\link{conditional-expectations}},
\code{\link{datacomp-expectations}},
\code{\link{generic-expectations}}
}
\concept{data expectations}
