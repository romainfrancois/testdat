% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chk.R
\name{chk-generic}
\alias{chk-generic}
\alias{chk_dummy}
\alias{chk_blank}
\alias{chk_equals}
\alias{chk_range}
\alias{chk_pattern}
\alias{chk_max_length}
\alias{chk_text_miss}
\alias{chk_text_nmiss}
\alias{chk_unique}
\alias{chk_date_yyyymmdd}
\alias{chk_date_yyyymm}
\alias{chk_date_yyyy}
\alias{chk_ascii}
\alias{chk_values}
\title{Generic checking functions}
\usage{
chk_dummy(x)

chk_blank(x)

chk_equals(x, val)

chk_range(x, min, max)

chk_pattern(x, pattern)

chk_max_length(x, len)

chk_text_miss(x, miss = getOption("testdat.miss_text"))

chk_text_nmiss(x, miss = getOption("testdat.miss_text"))

chk_unique(x)

chk_date_yyyymmdd(x)

chk_date_yyyymm(x)

chk_date_yyyy(x)

chk_ascii(x)

chk_values(x, ..., miss = getOption("testdat.miss"))
}
\arguments{
\item{x}{vector to check}

\item{val}{value for equality check}

\item{min}{minimum value for range check}

\item{max}{maximum value for range check}

\item{pattern}{pattern to look for as defined in
\link[stringr:str_detect]{str_detect()}}

\item{len}{maximum string length for checking string variables}

\item{miss}{vector of values to be treated as missing}

\item{...}{vectors of valid values}
}
\value{
A logical vector flagging records that have passed or failed the check
}
\description{
These functions provide common, simple data checks.
}
\examples{
sales <- data.frame(
  sale_id = 1:5,
  date = c("20200101", "20200101", "20200102", "20200103", "2020003"),
  sale_price = c(10, 20, 30, 40, -1),
  book_title = c(
    "Phenomenology of Spirit",
    NA,
    "Critique of Practical Reason",
    "Spirit of Trust",
    "Empiricism and the Philosophy of Mind"
  ),
  stringsAsFactors = FALSE
)

lapply(sales, function(x) any(chk_blank(x))) # Any data missing?

with(sales, date[!chk_date_yyyymmdd(date)]) # Examine invalid dates

all(chk_unique(sales$sale_id)) # Valid key?

sales$sale_price[!chk_range(sales$sale_price, 0, Inf)] <- NA # Clean out invalid prices
sales

}
\seealso{
\link[=chk-helper]{Checking Helper Functions}
}
