% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect-generic.R
\name{generic-expectations}
\alias{generic-expectations}
\alias{expect_allany}
\alias{expect_all}
\alias{expect_any}
\alias{expect_func}
\title{Expectations: generic expectations}
\usage{
expect_allany(vars, func, flt = TRUE, data = get_testdata(),
  args = list(), allany = c(chk_filter_all, chk_filter_any),
  func_desc = NULL)

expect_all(...)

expect_any(...)

expect_func(var, ...)
}
\arguments{
\item{vars}{a list of columns generated by \link[dplyr:vars]{vars()}}

\item{func}{a function that takes a vector as the first argument and returns
a logical vector of the same length showing whether an element passed or
failed}

\item{flt}{a filter specifying a subset of the dataset to test}

\item{data}{data frame to test. The \link[=global-data]{global test data} is used
by default.}

\item{args}{a named list of arguments to pass to \code{func}}

\item{allany}{function to use to combine results for each vector}

\item{...}{arguments to pass to \code{expect_allany()}}

\item{var}{an unquoted variable name}
}
\description{
These functions allow for testing of a dataset using an arbitrary function.
}
\seealso{
\link{check_generic} for a set of generic checking functions

Other data expectations: \code{\link{conditional-expectations}},
  \code{\link{datacomp-expectations}},
  \code{\link{value-expectations}}
}
\concept{data expectations}
